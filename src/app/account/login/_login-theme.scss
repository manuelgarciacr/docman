@use "SASS:map";
@use "@angular/material" as mat;

@mixin color($theme) {
    $color-config: mat.get-color-config($theme);
    $primary-palette: map.get($color-config, "primary");
    $warn-palette: map.get($color-config, "warn");
    $is-dark-theme: map.get($color-config, "is-dark");
    $exportBackgroundOpacity: if($is-dark-theme, 0.32, 0.06);
    // $foreground: map.get($color-config, "foreground");
    // $background: map.get($color-config, "background");
    // $color: if($is-dark-theme,
    //     mat.get-color-from-palette($primary-palette, 300-contrast),
    //     mat.get-color-from-palette($primary-palette, "default-contrast"));

    $background-color: if($is-dark-theme,
        mat.get-color-from-palette($primary-palette, 800),
        mat.get-color-from-palette($primary-palette, 300));
    $background-field-color: if($is-dark-theme,
        mat.get-color-from-palette($primary-palette, 700),
        mat.get-color-from-palette($primary-palette, 200));
    $background-field-disabled-color: if($is-dark-theme,
        mat.get-color-from-palette($primary-palette, 900),
        mat.get-color-from-palette($primary-palette, 400));
    $field-color: if($is-dark-theme,
        white,
        black);
    $error-color: mat.get-color-from-palette($warn-palette, "default");
    app-login, app-signup, app-validation, app-users, dlg {
        --mat-icon-button-hover-state-layer-opacity: .2;
        form, mat-dialog-content, mat-dialog-actions {
            // @debug $is-dark-theme;
            // @debug mat.get-color-from-palette($primary-palette, 300, $exportBackgroundOpacity);
            // @debug mat.get-color-from-palette($primary-palette, 100);
            // @debug $background-color;
            // @debug $background-field-color;
            color: $field-color;
            background-color: $background-color;
            min-width: 21rem;
            mat-form-field {
                :-webkit-autofill {
                    filter:none; /* needed for firefox! */
                    box-shadow: 0 0 0 100px #{$background-field-color} inset;
                    color: #{$field-color}!important;
                    -webkit-text-fill-color: #{$field-color}!important;
                }
                --mdc-filled-text-field-container-color: #{$background-field-color};
                --mdc-filled-text-field-caret-color: #{$field-color};
                --mdc-filled-text-field-label-text-color: #{$field-color};
                --mdc-filled-text-field-focus-label-text-color: #{$field-color};
                --mdc-filled-text-field-active-indicator-color: #{$field-color};
                --mdc-filled-text-field-focus-active-indicator-color: #{$field-color};
                --mdc-filled-text-field-hover-active-indicator-color: #{$field-color};
                --mdc-filled-text-field-input-text-color: #{$field-color};
                --mdc-filled-text-field-disabled-container-color: #{$background-field-disabled-color};
                .mat-mdc-form-field-bottom-align::before {
                    height: 1.5rem!important;
                }
            }
            mat-checkbox {
                --mdc-checkbox-unselected-icon-color: #{$field-color};
                --mdc-checkbox-unselected-focus-icon-color: #{$field-color};
                --mdc-checkbox-unselected-hover-icon-color: #{$field-color};
                --mdc-theme-text-primary-on-background: #{$field-color};
            }
        }
        mat-dialog-actions {
            color: $field-color;
            background-color: mat.get-color-from-palette($primary-palette, default),;
        }
        mat-error {
            color: $error-color!important;
        }
    }
}

@mixin typography($theme) {
    .doc-login-font-size {
        font: mat.get-theme-typography($theme, subtitle-1);
    }
}

@mixin theme($theme) {
    @if mat.theme-has($theme, color) {
        @include color($theme);
    }

    @if mat.theme-has($theme, typography) {
        @include typography($theme);
    }
}
